
1、数据类型转换
   1、弱类型
      1、声明时候，不需要指定数据类型
      2、由 值 来决定变量的数据类型

      查看变量的数据类型：
      typeof() 或 typeof
      语法：
        typeof(变量)
	typeof 变量
  
   2、隐式转换
      不同类型的数据在计算过程中会进行自动转换
      var stuName="张三丰";
      var stuAge=15;
      console.log(stuName+stuAge);

      NaN : Not a Number 不是一个数字
      isNaN(value) :
         true : 不是数字
	 false : 是一个数字
      任何数据类型与string相加时，结果为 string
   3、显示转换(强制转换)
      通过 转换函数 完成数据类型转换
      1、toString()
         转换成字符串
      2、parseInt(value)
         将 value 转换成整数
	 能转则转，否则就是NaN
	 碰到第一个非数字字符，则停止转换。
	 如果第一个字符就是非数字字符，无法转换结果为 NaN

	 注意：在网页中接收用户的数据全部都是 字符串 类型
      3、parseFloat(value)
         将value 转换成 小数

	 碰到第一个非数字或.字符，则停止转换。
	 如果第一个字符就是非数字.字符，无法转换结果为 NaN

      4、练习
         1、输入框
	    var input=prompt("提示信息","默认值(可选)");   
2、函数
   1、什么是函数
      函数(Function)，称为 方法(Method)，过程(Procedure)

      功能：是一段预定义好，并且可以被反复使用的代码块。可以包含多条语句。

      预定义好：事先定义好，随用随取，不会在网页加载时执行。
      反复使用：代码复用，可以被多个元素所调用
      代码块：允许包含若干条语句

      其本质就是一个独立的功能体.
   2、定义函数(方法，过程)
      语法：
        function 函数名称(){
	  若干操作代码;
	}
   3、调用
      在任何允许编写JS脚本的地方，直接通过 函数名称() 进行调用

      console.log();
      typeof()
      document.write();
      alert();
      promt();
   4、定义带参函数
      语法：
        function 函数列表(参数列表){
	
	}

	参数列表：由一个或多个参数名称组成,多参数间，用,分割
	声明函数所定义的参数，称之外"形参(形式参数)"


	console.log("Hello World");
	prompt("input your salary","0");

	调用带参函数：
	函数名称(参数列表);
	调用函数时所传递进来的参数称之为 "实参(实际参数)"
    5、变量作用域 
       作用域：变量的作用范围

       1、局部变量
          在某一具体函数中所声明的变量，称之为 局部变量 ，只有在当前函数内有效
       2、全局变量
          在JS标签(文件)中，独立于任何函数所声明的变量，称之为 全局变量 ，在整个网页中，全都有效

          注意：当全局变量 与 局部变量 相冲突时，优先使用 局部变量

	  声明变量时，如果不使用var 关键字，那么声明的就是全局变量

3、分支结构(选择结构)
   1、流程控制
      程序=数据 + 算法

      数据：基本信息
      算法：解决一个问题的思路

      程序三大基本结构：
      1、顺序结构
         自顶向下执行
      2、选择结构(分支结构)
         根据条件选择某一块代码执行
      3、循环结构
         根据条件选择某一块代码反复执行

      流程图：以图形的方式描述程序的走向
        1、圆角矩形
	   表示程序开始或结束
	2、平行四边形
	   表示程序中的输入与输出
	3、菱形
	   表示 条件判断
	4、矩形
	   表示 数据处理
   2、分支结构
      1、what
         在不同的情形下有条件的选择某些代码去执行

	 1、当满足某个条件运行某些语句
	    不满足时不运行 - if结构
	 2、当满足某个条件运行某些语句
	    不满足时，运行另外某些语句
	    -if...else 结构
      2、运算符
         比较运算符
	 >,<,>=,<=,==,!=
	 以上 运算符 运算结果为 boolean 类型
      3、if结构
         1、语法
	    if(条件){
	      语句1;
	      语句2;
	      ...
	    }

	    条件：是一个boolean 类型的值

	    流程：、
	     1、判断条件，条件如果为真，则执行 语句块中的 内容
	        如果条件为假，则不执行语句块中的内容
	     2、继续向下执行
         2、注意
	    1、条件 必须 为 boolean
	       如果为非boolean类型的数据作为条件，则会自动转换
	       以下情况会自动转换为false
	       if(0){}
	       if(0.0){}
	       if(null){}
	       if(undefined){}
	       if(""){}
	       if(NaN){}
            2、if(条件){}
	       中的 {} 可以被省略
	       如果省略{} if结构只能控制它下面的一条语句。
	       建议：尽量不要省略大括号
      4、if...else... 结构
         1、语法
	    if(条件){
	      语句块1;
	    }else{
	      语句块2;
	    }
      5、多重if结构
	问题
         手动录入一个 考试成绩 
	 成绩 == 100分,奖励一台 兰博基尼
	 成绩 >=90 ，奖励一台 法拉利
	 成绩 >=80 ，奖励一台 奥迪
	 成绩 >=70 ，奖励一台 奥拓
	 成绩 >=60 ，奖励一台 永久牌...
	 否则 奖励俩大嘴巴子!
	语法：
	  if(条件1){
	    语句块1;
	  }else if(条件2){
	    语句块2;
	  }else if(条件3){
	    语句块3;
	  }....
	  else{
	    语句块n;
	  }
      6、练习
         使用 多重if结构 实现 ：根据 克莱托指数输出 胖 瘦 正常 效果
	 公式：克莱托指数=体重(kg)/(身高(m)*身高(m))

	 结果：
	    指数 < 20 : 偏瘦
	    指数 > 25 : 偏胖
	    否则 ：正好
	 体重：68kg
	 身高：1.75



